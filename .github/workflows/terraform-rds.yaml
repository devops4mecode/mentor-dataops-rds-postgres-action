# .github/workflows/terraform-rds.yaml
name: Terraform AWS RDS Deployment

on: 
  workflow_dispatch:
    inputs:
      DESTROY:
        description: 'Destroy infrastructure'
        required: false
        default: 'false'
      # TFVARS:
      #   description: 'TFVARS file for RDS Postgres'
      #   required: true

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_DEFAULT_REGION: ap-southeast-1

jobs:
  terraform-apply:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.5
      - name: Terraform Init
        if: inputs.DESTROY == 'false'
        run: terraform init
        working-directory: ./terraform
      - name: Terraform Apply
        if: inputs.DESTROY == 'false'
        id: apply
        run: terraform apply -auto-approve -var-file=dev.tfvars
        working-directory: ./terraform
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: Get Outputs
        if: inputs.DESTROY == 'false'
        run: echo "${{ steps.apply.outputs.outputs }}" >> outputs.json
        id: get_outputs
      - name: Upload Outputs
        if: inputs.DESTROY == 'false'
        uses: actions/upload-artifact@v2
        with:
          name: terraform_outputs
          path: outputs.json

  terraform-destroy:
    runs-on: ubuntu-latest
    steps:
      - name: Terraform Destroy
        if: inputs.DESTROY == 'true'
        working-directory: ./terraform
        run: terraform destroy -auto-approve -var-file=dev.tfvars